{
  "name": "chat-input-box",
  "type": "registry:ui",
  "title": "Chat Input Box",
  "description": "A comprehensive AI chat input component with multi-provider model selection (Claude, OpenAI, Google, Qwen, DeepSeek), file upload with drag-and-drop support, clipboard paste integration, customizable conversation styles, and toggle-able tools (web search, Reddit search, image generation). Features smooth animations, searchable model dropdown, visual upload progress, and responsive design.",
  "dependencies": [
    "framer-motion",
    "lucide-react",
    "tailwind-merge",
    "clsx",
    "react-icons"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "components/ui/chat-input-box.tsx",
      "content": "\"use client\";\n\nimport React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport {\n  Send,\n  Upload,\n  ChevronDown,\n  Paperclip,\n  X,\n  FileText,\n  Image,\n  File,\n  Loader2,\n  Search,\n  Check,\n} from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { SiClaude } from \"react-icons/si\";\nimport { TbBrandOpenai } from \"react-icons/tb\";\nimport { RiGeminiFill } from \"react-icons/ri\";\nimport { FaTools } from \"react-icons/fa\";\n\n// Constants\nconst ICON_SIZE = \"h-4 w-4\";\nconst DROPDOWN_ANIMATION = {\n  initial: { opacity: 0, y: -10 },\n  animate: { opacity: 1, y: 0 },\n  exit: { opacity: 0, y: -10 },\n};\n\n// Custom SVG Icons\nconst QwenIcon = ({ className }: { className?: string }) => (\n  <svg\n    fill=\"currentColor\"\n    fillRule=\"evenodd\"\n    height=\"1em\"\n    style={{ flex: \"none\", lineHeight: 1 }}\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    className={className}\n  >\n    <path d=\"M12.604 1.34c.393.69.784 1.382 1.174 2.075a.18.18 0 00.157.091h5.552c.174 0 .322.11.446.327l1.454 2.57c.19.337.24.478.024.837-.26.43-.513.864-.76 1.3l-.367.658c-.106.196-.223.28-.04.512l2.652 4.637c.172.301.111.494-.043.77-.437.785-.882 1.564-1.335 2.34-.159.272-.352.375-.68.37-.777-.016-1.552-.01-2.327.016a.099.099 0 00-.081.05 575.097 575.097 0 01-2.705 4.74c-.169.293-.38.363-.725.364-.997.003-2.002.004-3.017.002a.537.537 0 01-.465-.271l-1.335-2.323a.09.09 0 00-.083-.049H4.982c-.285.03-.553-.001-.805-.092l-1.603-2.77a.543.543 0 01-.002-.54l1.207-2.12a.198.198 0 000-.197 550.951 550.951 0 01-1.875-3.272l-.79-1.395c-.16-.31-.173-.496.095-.965.465-.813.927-1.625 1.387-2.436.132-.234.304-.334.584-.335a338.3 338.3 0 012.589-.001.124.124 0 00.107-.063l2.806-4.895a.488.488 0 01.422-.246c.524-.001 1.053 0 1.583-.006L11.704 1c.341-.003.724.032.9.34zm-3.432.403a.06.06 0 00-.052.03L6.254 6.788a.157.157 0 01-.135.078H3.253c-.056 0-.07.025-.041.074l5.81 10.156c.025.042.013.062-.034.063l-2.795.015a.218.218 0 00-.2.116l-1.32 2.31c-.044.078-.021.118.068.118l5.716.008c.046 0 .08.02.104.061l1.403 2.454c.046.081.092.082.139 0l5.006-8.76.783-1.382a.055.055 0 01.096 0l1.424 2.53a.122.122 0 00.107.062l2.763-.02a.04.04 0 00.035-.02.041.041 0 000-.04l-2.9-5.086a.108.108 0 010-.113l.293-.507 1.12-1.977c.024-.041.012-.062-.035-.062H9.2c-.059 0-.073-.026-.043-.077l1.434-2.505a.107.107 0 000-.114L9.225 1.774a.06.06 0 00-.053-.031zm6.29 8.02c.046 0 .058.02.034.06l-.832 1.465-2.613 4.585a.056.056 0 01-.05.029.058.058 0 01-.05-.029L8.498 9.841c-.02-.034-.01-.052.028-.054l.216-.012 6.722-.012z\" />\n  </svg>\n);\n\nconst DeepSeekIcon = ({ className }: { className?: string }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    style={{ flex: \"none\", lineHeight: 1 }}\n    className={className}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M23.748 4.482c-.254-.124-.364.113-.512.234-.051.039-.094.09-.137.136-.372.397-.806.657-1.373.626-.829-.046-1.537.214-2.163.848-.133-.782-.575-1.248-1.247-1.548-.352-.156-.708-.311-.955-.65-.172-.241-.219-.51-.305-.774-.055-.16-.11-.323-.293-.35-.2-.031-.278.136-.356.276-.313.572-.434 1.202-.422 1.84.027 1.436.633 2.58 1.838 3.393.137.093.172.187.129.323-.082.28-.18.552-.266.833-.055.179-.137.217-.329.14a5.526 5.526 0 0 1-1.736-1.18c-.857-.828-1.631-1.742-2.597-2.458a11.365 11.365 0 0 0-.689-.471c-.985-.957.13-1.743.388-1.836.27-.098.093-.432-.779-.428-.872.004-1.67.295-2.687.684a3.055 3.055 0 0 1-.465.137 9.597 9.597 0 0 0-2.883-.102c-1.885.21-3.39 1.102-4.497 2.623C.082 8.606-.231 10.684.152 12.85c.403 2.284 1.569 4.175 3.36 5.653 1.858 1.533 3.997 2.284 6.438 2.14 1.482-.085 3.133-.284 4.994-1.86.47.234.962.327 1.78.397.63.059 1.236-.03 1.705-.128.735-.156.684-.837.419-.961-2.155-1.004-1.682-.595-2.113-.926 1.096-1.296 2.746-2.642 3.392-7.003.05-.347.007-.565 0-.845-.004-.17.035-.237.23-.256a4.173 4.173 0 0 0 1.545-.475c1.396-.763 1.96-2.015 2.093-3.517.02-.23-.004-.467-.247-.588zM11.581 18c-2.089-1.642-3.102-2.183-3.52-2.16-.392.024-.321.471-.235.763.09.288.207.486.371.739.114.167.192.416-.113.603-.673.416-1.842-.14-1.897-.167-1.361-.802-2.5-1.86-3.301-3.307-.774-1.393-1.224-2.887-1.298-4.482-.02-.386.093-.522.477-.592a4.696 4.696 0 0 1 1.529-.039c2.132.312 3.946 1.265 5.468 2.774.868.86 1.525 1.887 2.202 2.891.72 1.066 1.494 2.082 2.48 2.914.348.292.625.514.891.677-.802.09-2.14.11-3.054-.614zm1-6.44a.306.306 0 0 1 .415-.287.302.302 0 0 1 .2.288.306.306 0 0 1-.31.307.303.303 0 0 1-.304-.308zm3.11 1.596c-.2.081-.399.151-.59.16a1.245 1.245 0 0 1-.798-.254c-.274-.23-.47-.358-.552-.758a1.73 1.73 0 0 1 .016-.588c.07-.327-.008-.537-.239-.727-.187-.156-.426-.199-.688-.199a.559.559 0 0 1-.254-.078.253.253 0 0 1-.114-.358c.028-.054.16-.186.192-.21.356-.202.767-.136 1.146.016.352.144.618.408 1.001.782.391.451.462.576.685.914.176.265.336.537.445.848.067.195-.019.354-.25.452z\"\n    />\n  </svg>\n);\n\n// AI Models data\nconst AI_MODELS = {\n  claude: [\n    {\n      id: \"claude-sonnet-4\",\n      name: \"Claude Sonnet 4\",\n      icon: <SiClaude className=\"h-4 w-4\" />,\n    },\n    {\n      id: \"claude-sonnet-4.5\",\n      name: \"Claude Sonnet 4.5\",\n      icon: <SiClaude className=\"h-4 w-4\" />,\n    },\n    {\n      id: \"claude-haiku-3.5\",\n      name: \"Claude Haiku 3.5\",\n      icon: <SiClaude className=\"h-4 w-4\" />,\n    },\n  ],\n  google: [\n    {\n      id: \"gemini-2.5-pro\",\n      name: \"Gemini 2.5 Pro\",\n      icon: <RiGeminiFill className=\"h-4 w-4\" />,\n    },\n    {\n      id: \"gemini-2.5-flash\",\n      name: \"Gemini 2.5 Flash\",\n      icon: <RiGeminiFill className=\"h-4 w-4\" />,\n    },\n  ],\n  openai: [\n    {\n      id: \"openai-5\",\n      name: \"OpenAI 5\",\n      icon: <TbBrandOpenai className=\"h-4 w-4\" />,\n    },\n    {\n      id: \"openai-5-nano\",\n      name: \"OpenAI 5 Nano\",\n      icon: <TbBrandOpenai className=\"h-4 w-4\" />,\n    },\n    {\n      id: \"openai-5-mini\",\n      name: \"OpenAI 5 Mini\",\n      icon: <TbBrandOpenai className=\"h-4 w-4\" />,\n    },\n    {\n      id: \"openai-o4-mini\",\n      name: \"OpenAI o4 Mini\",\n      icon: <TbBrandOpenai className=\"h-4 w-4\" />,\n    },\n  ],\n  qwen: [\n    {\n      id: \"qwen-3-max\",\n      name: \"Qwen3 Max\",\n      icon: <QwenIcon className=\"h-4 w-4\" />,\n    },\n    {\n      id: \"qwen-3-235b-a22b\",\n      name: \"Qwen3 235B A22B\",\n      icon: <QwenIcon className=\"h-4 w-4\" />,\n    },\n    {\n      id: \"qwen-3-30b-a3b-thinking-2507\",\n      name: \"Qwen3 30B A3B Thinking 2507\",\n      icon: <QwenIcon className=\"h-4 w-4\" />,\n    },\n  ],\n  deepseek: [\n    {\n      id: \"deepseek-r1-fast\",\n      name: \"DeepSeek R1 Fast\",\n      icon: <DeepSeekIcon className=\"h-4 w-4\" />,\n    },\n    {\n      id: \"deepseek-v3.1\",\n      name: \"DeepSeek V3.1\",\n      icon: <DeepSeekIcon className=\"h-4 w-4\" />,\n    },\n  ],\n};\n\n// Style options\nconst STYLE_OPTIONS = [\n  {\n    id: \"technical\",\n    name: \"Technical\",\n    description: \"Detailed technical explanations\",\n  },\n  {\n    id: \"study\",\n    name: \"Study\",\n    description: \"Educational and learning focused\",\n  },\n  {\n    id: \"classic\",\n    name: \"Classic\",\n    description: \"Traditional and formal tone\",\n  },\n  {\n    id: \"professional\",\n    name: \"Professional\",\n    description: \"Business and work appropriate\",\n  },\n  { id: \"formal\", name: \"Formal\", description: \"Structured and official\" },\n];\n\ninterface UploadedFile {\n  id: string;\n  name: string;\n  size: number;\n  type: string;\n  url?: string;\n  isUploading: boolean;\n  progress: number;\n}\n\ninterface ChatInputBoxProps {\n  className?: string;\n}\n\nexport default function ChatInputBox({ className }: ChatInputBoxProps) {\n  const [message, setMessage] = useState(\"\");\n  const [selectedModel, setSelectedModel] = useState(\"claude-sonnet-4\");\n  const [selectedStyle, setSelectedStyle] = useState(\"classic\");\n  const [showModelDropdown, setShowModelDropdown] = useState(false);\n  const [showToolsDropdown, setShowToolsDropdown] = useState(false);\n  const [showStyleDropdown, setShowStyleDropdown] = useState(false);\n  const [modelSearchQuery, setModelSearchQuery] = useState(\"\");\n  const [webSearch, setWebSearch] = useState(false);\n  const [redditSearch, setRedditSearch] = useState(false);\n  const [createImage, setCreateImage] = useState(false);\n  const [uploadedFiles, setUploadedFiles] = useState<UploadedFile[]>([]);\n  const [isDragOver, setIsDragOver] = useState(false);\n\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const modelDropdownRef = useRef<HTMLDivElement>(null);\n  const toolsDropdownRef = useRef<HTMLDivElement>(null);\n\n  // Get selected model details\n  const getSelectedModelDetails = useCallback(() => {\n    for (const category of Object.values(AI_MODELS)) {\n      const model = category.find((m) => m.id === selectedModel);\n      if (model) return model;\n    }\n    return AI_MODELS.claude[0];\n  }, [selectedModel]);\n\n  const selectedModelDetails = getSelectedModelDetails();\n\n  // Get selected style details\n  const getSelectedStyleDetails = useCallback(() => {\n    return (\n      STYLE_OPTIONS.find((style) => style.id === selectedStyle) ||\n      STYLE_OPTIONS[2]\n    ); // Default to classic\n  }, [selectedStyle]);\n\n  const selectedStyleDetails = getSelectedStyleDetails();\n\n  // Filter models based on search query\n  const getFilteredModels = useCallback(() => {\n    if (!modelSearchQuery.trim()) return AI_MODELS;\n\n    const filtered: Partial<typeof AI_MODELS> = {};\n    Object.entries(AI_MODELS).forEach(([category, models]) => {\n      const filteredModels = models.filter(\n        (model) =>\n          model.name.toLowerCase().includes(modelSearchQuery.toLowerCase()) ||\n          category.toLowerCase().includes(modelSearchQuery.toLowerCase())\n      );\n      if (filteredModels.length > 0) {\n        filtered[category as keyof typeof AI_MODELS] = filteredModels;\n      }\n    });\n    return filtered;\n  }, [modelSearchQuery]);\n\n  const filteredModels = getFilteredModels();\n\n  // Utility functions\n  const getFileIcon = useCallback((type: string) => {\n    if (type.startsWith(\"image/\")) return <Image className={ICON_SIZE} />;\n    if (type === \"application/pdf\" || type.includes(\"document\"))\n      return <FileText className={ICON_SIZE} />;\n    return <File className={ICON_SIZE} />;\n  }, []);\n\n  // File processing helpers\n  const createUploadedFile = useCallback(\n    (file: File, customName?: string): UploadedFile => ({\n      id: Math.random().toString(36).substring(2, 11),\n      name: customName || file.name,\n      size: file.size,\n      type: file.type,\n      isUploading: true,\n      progress: 0,\n    }),\n    []\n  );\n\n  // Simulate file upload with progress\n  const simulateUpload = useCallback(\n    (file: UploadedFile, actualFile?: File) => {\n      let progress = 0;\n      const interval = setInterval(() => {\n        progress += Math.random() * 30;\n        if (progress >= 100) {\n          progress = 100;\n          clearInterval(interval);\n          setUploadedFiles((prev) =>\n            prev.map((f) =>\n              f.id === file.id\n                ? {\n                    ...f,\n                    isUploading: false,\n                    progress: 100,\n                    url:\n                      actualFile && file.type.startsWith(\"image/\")\n                        ? URL.createObjectURL(actualFile)\n                        : undefined,\n                  }\n                : f\n            )\n          );\n        } else {\n          setUploadedFiles((prev) =>\n            prev.map((f) => (f.id === file.id ? { ...f, progress } : f))\n          );\n        }\n      }, 200);\n    },\n    []\n  );\n\n  const processFileUpload = useCallback(\n    (file: File, customName?: string) => {\n      const uploadedFile = createUploadedFile(file, customName);\n      setUploadedFiles((prev) => [...prev, uploadedFile]);\n      simulateUpload(uploadedFile, file);\n    },\n    [createUploadedFile, simulateUpload]\n  );\n\n  // Remove uploaded file\n  const removeFile = useCallback((fileId: string) => {\n    setUploadedFiles((prev) => {\n      const fileToRemove = prev.find((f) => f.id === fileId);\n      if (fileToRemove?.url && fileToRemove.url.startsWith(\"blob:\")) {\n        URL.revokeObjectURL(fileToRemove.url);\n      }\n      return prev.filter((f) => f.id !== fileId);\n    });\n  }, []);\n\n  // Handle file upload\n  const handleFileUpload = useCallback(() => {\n    fileInputRef.current?.click();\n  }, []);\n\n  const handleFileChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const files = e.target.files;\n      if (files && files.length > 0) {\n        Array.from(files).forEach((file) => processFileUpload(file));\n        // Reset input\n        if (fileInputRef.current) {\n          fileInputRef.current.value = \"\";\n        }\n      }\n    },\n    [processFileUpload]\n  );\n\n  // Handle paste\n  const handlePaste = useCallback(\n    (e: React.ClipboardEvent) => {\n      const items = e.clipboardData?.items;\n      if (!items) return;\n\n      Array.from(items).forEach((item) => {\n        if (item.type.startsWith(\"image/\")) {\n          const file = item.getAsFile();\n          if (file) {\n            processFileUpload(file, `pasted-image-${Date.now()}.png`);\n          }\n        }\n      });\n    },\n    [processFileUpload]\n  );\n\n  // Drag and drop handlers\n  const handleDragEvents = useCallback(\n    (e: React.DragEvent, type: \"enter\" | \"leave\" | \"over\" | \"drop\") => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      switch (type) {\n        case \"enter\":\n          setIsDragOver(true);\n          break;\n        case \"leave\":\n          if (!e.currentTarget.contains(e.relatedTarget as Node)) {\n            setIsDragOver(false);\n          }\n          break;\n        case \"drop\":\n          setIsDragOver(false);\n          const files = Array.from(e.dataTransfer.files);\n          files.forEach((file) => processFileUpload(file));\n          break;\n      }\n    },\n    [processFileUpload]\n  );\n\n  // Handle send message\n  const handleSend = useCallback(() => {\n    if (message.trim()) {\n      console.log(\"Sending message:\", {\n        message: message.trim(),\n        model: selectedModel,\n        style: selectedStyle,\n        webSearch,\n        redditSearch,\n        createImage,\n      });\n      setMessage(\"\");\n    }\n  }, [\n    message,\n    selectedModel,\n    selectedStyle,\n    webSearch,\n    redditSearch,\n    createImage,\n  ]);\n\n  // Handle Enter key\n  const handleKeyDown = useCallback(\n    (e: React.KeyboardEvent) => {\n      if (e.key === \"Enter\" && !e.shiftKey) {\n        e.preventDefault();\n        handleSend();\n      }\n    },\n    [handleSend]\n  );\n\n  // Cleanup object URLs on unmount\n  useEffect(() => {\n    return () => {\n      uploadedFiles.forEach((file) => {\n        if (file.url && file.url.startsWith(\"blob:\")) {\n          URL.revokeObjectURL(file.url);\n        }\n      });\n    };\n  }, [uploadedFiles]);\n\n  // Handle click outside dropdowns\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as Node;\n\n      // Close model dropdown if clicked outside\n      if (\n        showModelDropdown &&\n        modelDropdownRef.current &&\n        !modelDropdownRef.current.contains(target)\n      ) {\n        setShowModelDropdown(false);\n        setModelSearchQuery(\"\"); // Clear search when closing\n      }\n\n      // Close tools dropdown if clicked outside (but not if clicking on style dropdown)\n      if (\n        showToolsDropdown &&\n        toolsDropdownRef.current &&\n        !toolsDropdownRef.current.contains(target)\n      ) {\n        setShowToolsDropdown(false);\n        setShowStyleDropdown(false); // Also close style dropdown when tools dropdown closes\n      }\n\n      // Close style dropdown if tools dropdown is closed\n      if (!showToolsDropdown && showStyleDropdown) {\n        setShowStyleDropdown(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [showModelDropdown, showToolsDropdown, showStyleDropdown]);\n\n  return (\n    <div className=\"\">\n      {/* File Preview Section */}\n      <AnimatePresence>\n        {uploadedFiles.length > 0 && (\n          <motion.div\n            initial={{ opacity: 0, height: 0 }}\n            animate={{ opacity: 1, height: \"auto\" }}\n            exit={{ opacity: 0, height: 0 }}\n            className=\"mb-2\"\n          >\n            <div className=\"flex flex-wrap gap-3\">\n              {uploadedFiles.map((file) => (\n                <motion.div\n                  key={file.id}\n                  initial={{ opacity: 0, scale: 0.8 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  exit={{ opacity: 0, scale: 0.8 }}\n                  className=\"relative group\"\n                >\n                  {/* File Preview Card */}\n                  <div className=\"w-20 h-20 rounded-xl overflow-hidden border border-fd-border bg-fd-background/50 flex items-center justify-center\">\n                    {file.isUploading ? (\n                      // Loading State\n                      <Loader2 className=\"h-8 w-8 animate-spin text-fd-primary\" />\n                    ) : file.type.startsWith(\"image/\") && file.url ? (\n                      // Image Preview\n                      <img\n                        src={file.url}\n                        alt={file.name}\n                        className=\"w-full h-full object-cover\"\n                      />\n                    ) : (\n                      // File Icon\n                      <div className=\"flex items-center justify-center\">\n                        {getFileIcon(file.type)}\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Remove Button */}\n                  <button\n                    type=\"button\"\n                    onClick={() => removeFile(file.id)}\n                    className=\"absolute -top-2 -right-2 p-1 rounded-full bg-fd-background border border-fd-border hover:bg-red-500 transition-colors opacity-0 group-hover:opacity-100\"\n                  >\n                    <X className=\"h-3 w-3 text-fd-accent-foreground\" />\n                  </button>\n\n                  {/* File Name Tooltip */}\n                  <div className=\"absolute bottom-0 left-0 right-0 bg-fd-background/90 backdrop-blur-sm px-2 py-1 text-xs text-fd-foreground rounded-b-xl truncate opacity-0 group-hover:opacity-100 transition-opacity\">\n                    {file.name}\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      <div\n        className={cn(\n          \"w-full max-w-4xl mx-auto rounded-3xl border-2 transition-all duration-200 outline-2 outline-fd-accent bg-fd-card/40 backdrop-blur-sm relative\",\n          isDragOver\n            ? \"border-fd-primary bg-fd-primary/5 scale-[1.02]\"\n            : \"border-fd-border\",\n          className\n        )}\n        onDragEnter={(e) => handleDragEvents(e, \"enter\")}\n        onDragLeave={(e) => handleDragEvents(e, \"leave\")}\n        onDragOver={(e) => handleDragEvents(e, \"over\")}\n        onDrop={(e) => handleDragEvents(e, \"drop\")}\n      >\n        {/* Drag Overlay */}\n        {isDragOver && (\n          <div className=\"absolute inset-0 rounded-3xl bg-fd-primary/10 border-2 border-dashed border-fd-primary flex items-center justify-center z-10\">\n            <div className=\"text-center\">\n              <Upload className=\"h-8 w-8 text-fd-primary mx-auto mb-2\" />\n              <p className=\"text-sm font-medium text-fd-primary\">\n                Drop files here to upload\n              </p>\n            </div>\n          </div>\n        )}\n        {/* Main Input Row */}\n        <div className=\"flex pt-2 px-4 items-end gap-3\">\n          <div className=\"flex-1 relative\">\n            <textarea\n              ref={textareaRef}\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              onKeyDown={handleKeyDown}\n              onPaste={handlePaste}\n              placeholder=\"Ask anything you want !!\"\n              className=\"w-full min-h-[48px] max-h-32 px-2 py-3 pr-12 rounded-2xl border-transparent  text-fd-foreground placeholder:text-fd-muted-foreground resize-none focus:outline-none focus:ring-none transition-all\"\n              rows={1}\n              style={{\n                scrollbarWidth: \"none\",\n                msOverflowStyle: \"none\",\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"h-[1px] bg-fd-border w-full\"></div>\n\n        {/* Controls Row */}\n        <div className=\"flex items-center p-4 justify-between flex-wrap\">\n          <div className=\"flex justify-center gap-1.5 md:gap-2\">\n            {/* Tools Dropdown */}\n            <div className=\"relative\" ref={toolsDropdownRef}>\n              <button\n                type=\"button\"\n                onClick={() => setShowToolsDropdown(!showToolsDropdown)}\n                className=\"flex items-center gap-2 p-3 rounded-lg border border-fd-border bg-fd-background/50 hover:bg-fd-accent transition-colors\"\n              >\n                <FaTools className={`${ICON_SIZE} text-fd-muted-foreground`} />\n              </button>\n\n              <AnimatePresence>\n                {showToolsDropdown && (\n                  <motion.div\n                    {...DROPDOWN_ANIMATION}\n                    className=\"absolute top-full left-0 mt-2 w-48 md:w-64 rounded-xl border border-fd-border bg-fd-card backdrop-blur-xl shadow-xl z-[100]\"\n                  >\n                    <div className=\"p-4\">\n                      {/* Style Selector */}\n                      <div className=\"relative mb-4\">\n                        <button\n                          type=\"button\"\n                          onClick={() =>\n                            setShowStyleDropdown(!showStyleDropdown)\n                          }\n                          className=\"w-full flex items-center justify-between transition-colors\"\n                        >\n                          <div className=\"flex items-center gap-3\">\n                            <span className=\"text-sm font-medium\">Style</span>\n                          </div>\n                          <ChevronDown\n                            className={cn(\n                              `${ICON_SIZE} text-fd-muted-foreground transition-transform duration-200`,\n                              showStyleDropdown && \"rotate-180\"\n                            )}\n                          />\n                        </button>\n\n                        <AnimatePresence>\n                          {showStyleDropdown && (\n                            <motion.div\n                              initial={{ opacity: 0, x: 10 }}\n                              animate={{ opacity: 1, x: 0 }}\n                              exit={{ opacity: 0, x: 10 }}\n                              className=\"absolute top-0 left-full ml-2 w-44 md:w-64 rounded-xl border border-fd-border bg-fd-card backdrop-blur-xl shadow-xl z-[110]\"\n                            >\n                              <div className=\"py-1 px-2  overflow-y-auto\">\n                                {STYLE_OPTIONS.map((style) => (\n                                  <button\n                                    key={style.id}\n                                    onClick={() => {\n                                      setSelectedStyle(style.id);\n                                      setShowStyleDropdown(false);\n                                    }}\n                                    className={cn(\n                                      \"w-full text-left my-2 px-3 py-1.5 rounded-lg hover:bg-fd-accent transition-colors flex items-center justify-between\",\n                                      selectedStyle === style.id &&\n                                        \"bg-fd-accent ring-1 ring-fd-primary/20\"\n                                    )}\n                                  >\n                                    <div className=\"flex-1\">\n                                      <div className=\"font-medium text-sm\">\n                                        {style.name}\n                                      </div>\n                                      <div className=\"text-xs truncate w-28 md:truncate-none md:w-auto text-fd-muted-foreground\">\n                                        {style.description}\n                                      </div>\n                                    </div>\n                                    {selectedStyle === style.id && (\n                                      <Check className=\"h-4 w-4 text-fd-primary flex-shrink-0 ml-2\" />\n                                    )}\n                                  </button>\n                                ))}\n                              </div>\n                            </motion.div>\n                          )}\n                        </AnimatePresence>\n                      </div>\n\n                      {/* Separator */}\n                      <div className=\"border-t border-fd-border my-4\"></div>\n\n                      {/* Toggle Options */}\n                      <div className=\"space-y-4\">\n                        <label className=\"flex items-center justify-between py-1\">\n                          <span className=\"text-sm font-medium\">\n                            Web Search\n                          </span>\n                          <button\n                            type=\"button\"\n                            onClick={() => setWebSearch(!webSearch)}\n                            className={cn(\n                              \"relative w-11 h-6 rounded-full transition-colors\",\n                              webSearch ? \"bg-fd-primary\" : \"bg-fd-muted\"\n                            )}\n                          >\n                            <div\n                              className={cn(\n                                \"absolute top-0.5 w-5 h-5 bg-fd-muted-foreground rounded-full transition-transform shadow-sm\",\n                                webSearch\n                                  ? \"translate-x-5  \"\n                                  : \"translate-x-0.5 \"\n                              )}\n                            />\n                          </button>\n                        </label>\n\n                        <label className=\"flex items-center justify-between py-1\">\n                          <span className=\"text-sm font-medium\">\n                            Reddit Search\n                          </span>\n                          <button\n                            type=\"button\"\n                            onClick={() => setRedditSearch(!redditSearch)}\n                            className={cn(\n                              \"relative w-11 h-6 rounded-full transition-colors\",\n                              redditSearch ? \"bg-fd-primary\" : \"bg-fd-muted\"\n                            )}\n                          >\n                            <div\n                              className={cn(\n                                \"absolute top-0.5 w-5 h-5 bg-fd-muted-foreground  rounded-full transition-transform shadow-sm\",\n                                redditSearch\n                                  ? \"translate-x-5\"\n                                  : \"translate-x-0.5\"\n                              )}\n                            />\n                          </button>\n                        </label>\n\n                        <label className=\"flex items-center justify-between py-1\">\n                          <span className=\"text-sm font-medium\">\n                            Create Image\n                          </span>\n                          <button\n                            type=\"button\"\n                            onClick={() => setCreateImage(!createImage)}\n                            className={cn(\n                              \"relative w-11 h-6 rounded-full transition-colors\",\n                              createImage ? \"bg-fd-primary\" : \"bg-fd-muted\"\n                            )}\n                          >\n                            <div\n                              className={cn(\n                                \"absolute top-0.5 w-5 h-5 bg-fd-muted-foreground  rounded-full transition-transform shadow-sm\",\n                                createImage\n                                  ? \"translate-x-5\"\n                                  : \"translate-x-0.5\"\n                              )}\n                            />\n                          </button>\n                        </label>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </div>\n\n            {/* Upload Button */}\n            <button\n              type=\"button\"\n              onClick={handleFileUpload}\n              className=\"p-2 rounded-lg border border-fd-border bg-fd-background/50 hover:bg-fd-accent transition-colors\"\n            >\n              <Paperclip className=\"h-5 w-5 text-fd-muted-foreground\" />\n            </button>\n\n            {/* Model Selector */}\n            <div className=\"relative\" ref={modelDropdownRef}>\n              <button\n                type=\"button\"\n                onClick={() => setShowModelDropdown(!showModelDropdown)}\n                className=\"flex items-center gap-2 px-4 py-2.5 rounded-lg  border border-fd-border bg-fd-background/50 hover:bg-fd-accent transition-colors\"\n              >\n                {selectedModelDetails.icon}\n                <span className=\"text-sm font-medium w-24 md:w-auto truncate\">\n                  {selectedModelDetails.name}\n                </span>\n                <ChevronDown\n                  className={cn(\n                    `${ICON_SIZE} text-fd-muted-foreground transition-transform duration-200`,\n                    showModelDropdown && \"rotate-180\"\n                  )}\n                />\n              </button>\n\n              <AnimatePresence>\n                {showModelDropdown && (\n                  <motion.div\n                    {...DROPDOWN_ANIMATION}\n                    className=\"absolute top-full left-0 mt-2 w-56 md:w-72 rounded-xl border border-fd-border bg-fd-card backdrop-blur-xl shadow-xl z-[100]\"\n                  >\n                    {/* Search Input */}\n                    <div className=\"p-2 border-b border-fd-border\">\n                      <div className=\"relative\">\n                        <Search\n                          className={`absolute left-3 top-1/2 transform -translate-y-1/2 ${ICON_SIZE} text-fd-muted-foreground`}\n                        />\n                        <input\n                          type=\"text\"\n                          placeholder=\"Search models...\"\n                          value={modelSearchQuery}\n                          onChange={(e) => setModelSearchQuery(e.target.value)}\n                          className=\"w-full pl-10 pr-4 py-2 text-sm   rounded-lg focus:outline-none focus:ring-none transition-colors\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"p-2 max-h-72 overflow-y-auto\">\n                      {Object.entries(filteredModels).length === 0 ? (\n                        <div className=\"px-3 py-8 text-center text-sm text-fd-muted-foreground\">\n                          No models found matching \"{modelSearchQuery}\"\n                        </div>\n                      ) : (\n                        Object.entries(filteredModels).map(\n                          ([category, models]) => (\n                            <div key={category} className=\"mb-3 last:mb-0\">\n                              <div className=\"px-3 py-1 text-xs font-semibold text-fd-muted-foreground uppercase tracking-wide\">\n                                {category}\n                              </div>\n                              {models.map((model) => (\n                                <button\n                                  key={model.id}\n                                  onClick={() => {\n                                    setSelectedModel(model.id);\n                                    setShowModelDropdown(false);\n                                    setModelSearchQuery(\"\"); // Clear search when selecting\n                                  }}\n                                  className={cn(\n                                    \"w-full flex items-center gap-3 px-3 py-2 rounded-lg text-left hover:bg-fd-accent transition-colors\",\n                                    selectedModel === model.id && \"bg-fd-accent\"\n                                  )}\n                                >\n                                  {model.icon}\n                                  <span className=\"text-sm truncate w-40 md:truncate-none md:w-auto\">\n                                    {model.name}\n                                  </span>\n                                </button>\n                              ))}\n                            </div>\n                          )\n                        )\n                      )}\n                    </div>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </div>\n          </div>\n\n          <div className=\"flex justify-center gap-3\">\n            {/* Send Button */}\n            <button\n              type=\"button\"\n              onClick={handleSend}\n              disabled={!message.trim()}\n              className=\"p-3  rounded-lg bg-fd-primary text-fd-primary-foreground hover:bg-fd-primary/90 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n            >\n              <Send className=\"h-4 w-4\" />\n            </button>\n          </div>\n        </div>\n\n        {/* Hidden file input */}\n        <input\n          ref={fileInputRef}\n          type=\"file\"\n          multiple\n          accept=\"image/*,.pdf,.txt,.doc,.docx\"\n          onChange={handleFileChange}\n          className=\"hidden\"\n        />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ui/chat-input-box.tsx"
    }
  ]
}
