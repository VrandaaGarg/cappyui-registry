{
  "name": "puzzle",
  "type": "registry:ui",
  "title": "Puzzle",
  "description": "An infinitely looping animated puzzle component with sequential piece animations and 3-second hold, perfect for showcasing assembly or completion concepts with optimized performance.",
  "dependencies": ["framer-motion", "tailwind-merge", "clsx"],
  "registryDependencies": [],
  "files": [
    {
      "path": "components/ui/puzzle.tsx",
      "content": "\"use client\";\n\nimport React, { memo, useMemo } from \"react\";\nimport { motion, Transition, Variants } from \"framer-motion\";\nimport { cn } from \"@/lib/utils\";\n\ninterface PuzzleProps {\n  className?: string;\n}\n\n// Animation constants - defined outside component to prevent recreation\nconst ANIMATE_IN_DURATION = 2.1;\nconst HOLD_DURATION = 3.0;\nconst ANIMATE_OUT_DURATION = 2.0;\nconst TOTAL_DURATION =\n  ANIMATE_IN_DURATION + HOLD_DURATION + ANIMATE_OUT_DURATION;\n\n// Shared transition config for better performance\nconst createTransition = (times: number[]): Transition => ({\n  duration: TOTAL_DURATION,\n  times,\n  ease: [0.25, 0.1, 0.25, 1], // Custom cubic-bezier for smoother animation\n  repeat: Infinity,\n  repeatType: \"loop\" as const,\n});\n\nexport const Puzzle = memo(({ className }: PuzzleProps) => {\n  // Memoize animation variants to prevent recreation on each render\n  const pieceVariants = useMemo(() => {\n    const topLeft: Variants = {\n      initial: { opacity: 0, x: -100, y: -100, rotate: -15 },\n      animate: {\n        opacity: [0, 1, 1, 1, 0],\n        x: [-100, 0, 0, 0, -100],\n        y: [-100, 0, 0, 0, -100],\n        rotate: [-15, 0, 0, 0, -15],\n      },\n    };\n\n    const topRight: Variants = {\n      initial: { opacity: 0, x: 100, y: -100, rotate: 15 },\n      animate: {\n        opacity: [0, 0, 1, 1, 0],\n        x: [100, 100, 0, 0, 100],\n        y: [-100, -100, 0, 0, -100],\n        rotate: [15, 15, 0, 0, 15],\n      },\n    };\n\n    const bottomLeft: Variants = {\n      initial: { opacity: 0, x: -100, y: 100, rotate: -15 },\n      animate: {\n        opacity: [0, 0, 1, 1, 0],\n        x: [-100, -100, 0, 0, -100],\n        y: [100, 100, 0, 0, 100],\n        rotate: [-15, -15, 0, 0, -15],\n      },\n    };\n\n    const bottomRight: Variants = {\n      initial: { opacity: 0, x: 100, y: 100, rotate: 15 },\n      animate: {\n        opacity: [0, 0, 1, 1, 0],\n        x: [100, 100, 0, 0, 100],\n        y: [100, 100, 0, 0, 100],\n        rotate: [15, 15, 0, 0, 15],\n      },\n    };\n\n    return { topLeft, topRight, bottomLeft, bottomRight };\n  }, []);\n\n  // Memoize transitions to prevent recreation\n  const transitions = useMemo(\n    () => ({\n      topLeft: createTransition([0, 0.1, 0.296, 0.718, 1]),\n      topRight: createTransition([0, 0.15, 0.2, 0.718, 1]),\n      bottomLeft: createTransition([0, 0.2, 0.25, 0.718, 1]),\n      bottomRight: createTransition([0, 0.25, 0.296, 0.718, 1]),\n    }),\n    []\n  );\n\n  return (\n    <div className={cn(\"flex items-center justify-center p-8\", className)}>\n      <div className=\"relative w-full max-w-md aspect-square\">\n        {/* Puzzle piece container */}\n        <div className=\"relative w-full h-full\">\n          {/* Top-left puzzle piece - First animation */}\n          <motion.div\n            variants={pieceVariants.topLeft}\n            initial=\"initial\"\n            animate=\"animate\"\n            transition={transitions.topLeft}\n            className=\"absolute top-0 left-0 w-1/2 h-1/2 bg-neutral-700\n              z-20 rounded-tl-3xl border-t-2 border-l-2 border-neutral-500\"\n            style={{ willChange: \"transform, opacity\" }}\n          >\n            {/* Right connector (male) */}\n            <div\n              className=\"absolute -right-6 top-1/2 -translate-y-1/2 w-12 h-12 bg-neutral-500\n             rounded-full z-30\"\n            />\n            <div className=\"absolute -right-5 top-1/2 -translate-y-1/2 w-12 h-12 bg-neutral-700 rounded-full z-40\" />\n            {/* Bottom connector (male) */}\n            <div\n              className=\"absolute bottom-0 left-1/2 -translate-x-1/2 translate-y-1/2 w-12 h-12 bg-fd-background\n             rounded-full z-30\"\n            />\n          </motion.div>\n\n          {/* Top-right puzzle piece - Second animation */}\n          <motion.div\n            variants={pieceVariants.topRight}\n            initial=\"initial\"\n            animate=\"animate\"\n            transition={transitions.topRight}\n            className=\"absolute top-0 right-0 w-1/2 h-1/2 bg-neutral-600\n             rounded-tr-3xl border-r-2 border-t-2 border-neutral-500\"\n            style={{ willChange: \"transform, opacity\" }}\n          >\n            {/* Left connector (female) */}\n            <div className=\"absolute -left-6 top-1/2 -translate-y-1/2 w-12 h-12 bg-fd-background rounded-full z-10\"></div>\n            {/* Bottom connector (male) */}\n            <div className=\"absolute -bottom-1 right-1/2 translate-x-1/2 translate-y-1/2 w-12 h-12 bg-fd-background rounded-full z-20\" />\n            <div className=\"absolute bottom-0 right-1/2 translate-x-1/2 translate-y-1/2 w-12 h-12 bg-neutral-500 rounded-full z-10\" />\n          </motion.div>\n\n          {/* Bottom-left puzzle piece - Third animation */}\n          <motion.div\n            variants={pieceVariants.bottomLeft}\n            initial=\"initial\"\n            animate=\"animate\"\n            transition={transitions.bottomLeft}\n            className=\"absolute bottom-0 z-20 left-0 w-1/2 h-1/2 bg-neutral-600 rounded-bl-3xl border-l-2 border-b-2 border-neutral-500\"\n            style={{ willChange: \"transform, opacity\" }}\n          >\n            {/* Top connector (female) */}\n            <div className=\"absolute -top-1 left-1/2 -translate-x-1/2 -translate-y-1/2 w-12 h-12 bg-neutral-500 rounded-full z-20\" />\n\n            <div className=\"absolute top-0 left-1/2 -translate-x-1/2 -translate-y-1/2 w-12 h-12 bg-neutral-600 rounded-full z-20\" />\n\n            {/** Right connector (male) */}\n\n            <div className=\"absolute -right-5 bottom-1/2 translate-y-1/2 w-12 h-12 bg-fd-background rounded-full z-40\" />\n          </motion.div>\n\n          {/* Bottom-right puzzle piece - Fourth animation */}\n          <motion.div\n            variants={pieceVariants.bottomRight}\n            initial=\"initial\"\n            animate=\"animate\"\n            transition={transitions.bottomRight}\n            className=\"absolute bottom-0 z-30 right-0 w-1/2 h-1/2 bg-neutral-700 rounded-br-3xl border-r-2 border-b-2 border-neutral-500\"\n            style={{ willChange: \"transform, opacity\" }}\n          >\n            {/* Top connector (female) */}\n            <div className=\"absolute top-1 right-1/2 translate-x-1/2 -translate-y-1/2 w-12 h-12 bg-neutral-700 rounded-full z-20\" />\n\n            {/** Left connector (female) */}\n            <div className=\"absolute -left-6 bottom-1/2 translate-y-1/2 w-12 h-12 bg-neutral-700 rounded-full z-20\" />\n\n            <div className=\"absolute -left-7 bottom-1/2 translate-y-1/2 w-12 h-12 bg-neutral-500 rounded-full z-10\" />\n          </motion.div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nPuzzle.displayName = \"Puzzle\";\n\nexport default Puzzle;\n",
      "type": "registry:ui",
      "target": "components/ui/puzzle.tsx"
    }
  ]
}
